name: Maven + Docker

on:
  push:
    tags:
      - "*.*.*"
    branches:
      - 'main'
      - 'develop'
      - 'release/**'
  pull_request:
    branches:
      - 'main'
      - 'develop'

jobs:
  build:
    name: Build with Maven
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Java 15
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17.0.0+35'
          cache: 'maven'

      - name: Build with Maven
        run: mvn -B package --file pom.xml -D skipTests=true

      - name: Upload JARs
        uses: actions/upload-artifact@v3
        with:
          name: jars
          path: target/*.jar

  docker:
    name: Build with Docker
    runs-on: ubuntu-latest
    needs: [ build ]
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Download JARs
        uses: actions/download-artifact@v3
        with:
          name: jars
          path: target/

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: |
            ghcr.io/${{ github.repository }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=sha,format=long

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to GHCR
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GHCR_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max